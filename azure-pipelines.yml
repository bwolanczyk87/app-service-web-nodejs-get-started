# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '70f59e87-157b-4a3f-96e8-bae1144aa0b3'
  
  # Environment name

  environmentTestName: 'QAEnv'
  environmentDevName: 'DevEnv'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Validation
  displayName: Validation sources stage
  jobs:
  - job: TempaltesValidation
    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        displayName: 'Validate webAppService template'
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Visual Studio Professional Subscription (70f59e87-157b-4a3f-96e8-bae1144aa0b3)'
          subscriptionId: '70f59e87-157b-4a3f-96e8-bae1144aa0b3'
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'myapp'
          location: 'Central US'
          templateLocation: 'Linked artifact'
          csmFile: 'ArmTemplate/webAppService.json'
          deploymentMode: 'Validation'        

- stage: Build
  displayName: Build stage
  dependsOn: 'Deployment'
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
     
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'npm install, build and test'
      
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentDevName)
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:  
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Create webAppService from template'
            condition: succeeded('Validation')
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Visual Studio Professional Subscription (70f59e87-157b-4a3f-96e8-bae1144aa0b3)'
              subscriptionId: '70f59e87-157b-4a3f-96e8-bae1144aa0b3'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'myapp'
              location: 'Central US'
              templateLocation: 'Linked artifact'
              csmFile: 'ArmTemplate/webAppService.json'
              deploymentMode: 'Incremental'
          - pwsh: $(System.DefaultWorkingDirectory)/ParseArmDeploymentOutput.ps1 -ArmOutputString '$(webAppNameOutput)' -MakeOutput -ErrorAction Stop          
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: '
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|10.10'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'